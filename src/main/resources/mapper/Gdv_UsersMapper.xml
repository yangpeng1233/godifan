<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.IGdv_Users" >
  <resultMap id="BaseResultMap" type="com.entity.Gdv_Users" >
    <id column="user_Id" property="userId" jdbcType="INTEGER" />
    <result column="user_NickName" property="userNickname" jdbcType="VARCHAR" />
    <result column="user_Name" property="userName" jdbcType="VARCHAR" />
    <result column="user_vip" property="userVip" jdbcType="INTEGER" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="user_Pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="user_birth" property="userBirth" jdbcType="VARCHAR" />
    <result column="user_address" property="userAddress" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_Id, user_NickName, user_Name, user_vip, user_phone, user_Pwd, user_sex, user_email, 
    user_birth, user_address
  </sql>

  <select id="selectAll" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from gdv_Users
  </select>


  <select id="selectLogin" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from gdv_Users
    <where>
      <if test="userName != null">
        and user_NickName = #{userName}
      </if>
      <if test="userPwd != null">
        and user_Pwd = #{userPwd}
      </if>
      <if test="userPhone != null">
        and user_phone = #{userphone}
      </if>
      <if test="userEmail != null">
        and user_email = #{userEmail}
      </if>
    </where>
  </select>

  <select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        SELECT
           COUNT(user_Id)
          FROM gdv_Users
  </select>

  <select id="selectPage" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT *
      FROM gdv_Users
      ORDER BY user_Id LIMIT #{start},#{pagesize}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from gdv_Users
    where user_Id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from gdv_Users
    where user_Id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.entity.Gdv_Users" >
    insert into gdv_Users (user_Id, user_NickName, user_Name, 
      user_vip, user_phone, user_Pwd, 
      user_sex, user_email, user_birth, 
      user_address)
    values (#{userId,jdbcType=INTEGER}, #{userNickname,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userVip,jdbcType=INTEGER}, #{userPhone,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{userSex,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{userBirth,jdbcType=VARCHAR}, 
      #{userAddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.entity.Gdv_Users" >
    insert into gdv_Users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_Id,
      </if>
      <if test="userNickname != null" >
        user_NickName,
      </if>
      <if test="userName != null" >
        user_Name,
      </if>
      <if test="userVip != null" >
        user_vip,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="userPwd != null" >
        user_Pwd,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="userBirth != null" >
        user_birth,
      </if>
      <if test="userAddress != null" >
        user_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userNickname != null" >
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userVip != null" >
        #{userVip,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userBirth != null" >
        #{userBirth,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null" >
        #{userAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.entity.Gdv_Users" >
    update gdv_Users
    <set >
      <if test="userNickname != null" >
        user_NickName = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_Name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userVip != null" >
        user_vip = #{userVip,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_Pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userBirth != null" >
        user_birth = #{userBirth,jdbcType=VARCHAR},
      </if>
      <if test="userAddress != null" >
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where user_Id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.entity.Gdv_Users" >
    update gdv_Users
    set user_NickName = #{userNickname,jdbcType=VARCHAR},
      user_Name = #{userName,jdbcType=VARCHAR},
      user_vip = #{userVip,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_Pwd = #{userPwd,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_birth = #{userBirth,jdbcType=VARCHAR},
      user_address = #{userAddress,jdbcType=VARCHAR}
    where user_Id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>